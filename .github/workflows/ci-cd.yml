name: CI/CD

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Use .NET 6
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x    

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    
    - name: Run GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        configFilePath: ./GitVersion.yml
    
    - name: bicep build template.bicep
      uses: Azure/bicep-build-action@v1.0.1
      with:
        bicepFilePath: ./deployment/template.bicep
        outputFilePath: ./deployment/template.json
        
    - name: Upload deployment templates
      uses: actions/upload-artifact@v3.1.0
      with:
        name: deployment
        path: ./deployment
                  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Log into GitHub Container Repository
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build & push image
      uses: docker/build-push-action@v2
      with:
        push: true
        file: ./Dockerfile
        context: .
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/${{ github.repository_owner }}/example-api:${{ steps.gitversion.outputs.semVer }}
        build-args: |
          version=${{ steps.gitversion.outputs.semVer }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  staging:
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: deployment

    - name: Login Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
      if: ${{ false }}

    - name: Get Revision with Production Label
      uses: azure/powershell@v1
      with:
        inlineScript: .\Get-ContainerAppProductionRevision.ps1 -resourceGroupName ${{ secrets.Azure.ResourceGroupName }} -containerAppName ${{ secrets.Azure.ContainerAppName }}
        azPSVersion: latest
      if: ${{ false }}

    - name: Replace Tokens in parameters.json
      uses: cschleiden/replace-tokens@v1.1
      with:
        tokenPrefix: '#{'
        tokenSuffix: '}'
        files: 'parameters.json'
        
    - name: Azure Template Deployment
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ secrets.Azure.ResourceGroupName }}
        template: ./template.json
        parameters: ./parameters.json
        deploymentMode: Incremental
      if: ${{ false }}

    - name: Set Staging Label on Latest Revision
      uses: azure/powershell@v1
      with:
        inlineScript: .\Set-ContainerAppLabel.ps1 -resourceGroupName ${{ secrets.Azure.ResourceGroupName }} -containerAppName ${{ secrets.Azure.ContainerAppName }}
        azPSVersion: latest
      if: ${{ false }}

  production:
    runs-on: ubuntu-latest
    needs: [build, staging]
    environment: production
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: deployment

    - name: Login Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
      if: ${{ false }}

    - name: Get Revision with Production Label
      uses: azure/powershell@v1
      with:
        inlineScript: .\Swap-Revisions.ps1 -resourceGroupName ${{ secrets.Azure.ResourceGroupName }} -containerAppName ${{ secrets.Azure.ContainerAppName }}
        azPSVersion: latest
      if: ${{ false }}
      
        
